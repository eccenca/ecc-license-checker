const fs = require('fs');
const {dirname} = require('path');

const _ = require('lodash');
const commandLineArgs = require('command-line-args');

const {loadReportFromFile, groupDependencies} = require('../util');

module.exports = argv => {
    const args = [
        {name: 'help', alias: 'h', description: 'Print help', type: Boolean},
        {
            name: 'inputFile',
            type: String,
            alias: 'i',
            typeLabel: 'file',
            defaultValue: false,
            defaultOption: true,
            description:
                'Input file (YAML format, generated by `license-checker report`)',
        },
        {
            name: 'outputFile',
            type: String,
            alias: 'o',
            typeLabel: 'file',
            defaultValue: false,
            description: 'Output file (YAML format, does not need to exist)',
        },
    ];

    const options = commandLineArgs(args, {argv});

    if (options.help) {
        const getUsage = require('command-line-usage');

        const sections = [
            {
                header: 'Eccenca License Checker (yaml2json)',
                content:
                    'Convert a yaml report into a json report grouped by license.',
            },
            {
                header: 'Synopsis',
                content: [
                    '$ license-checker yaml2json [--help] [--output=<path>] [--input] <path>',
                ],
            },
            {
                header: 'Options',
                optionList: args,
            },
        ];

        console.log(getUsage(sections));
    } else {
        let {dependencies} = loadReportFromFile(options.inputFile);

        dependencies = groupDependencies(dependencies);

        dependencies = JSON.stringify(dependencies);

        if (options.outputFile) {
            const mkdirp = require('mkdirp');

            const dir = dirname(options.outputFile);
            mkdirp.sync(dir);

            fs.writeFileSync(options.outputFile, dependencies, 'utf8');
        } else {
            console.log(dependencies);
        }
    }
};
